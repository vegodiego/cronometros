{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","timerID","undefined","change1","bind","change2","cancelSubmit","update","updateOk","updateCancel","delete","new","newCancel","newOk","addTime","stop","pad","millisecondsToHuman","state","timers","id","run","title","project","cronom","elapsedTime","time","timerVisibility","className","this","map","timer","index","onClick","icon","faTrashAlt","size","faEdit","type","for","defaultValue","onChange","onSubmit","value","faPlusSquare","event","setState","target","preventDefault","timerId","i","length","push","parseInt","filter","newTitle","newProject","setInterval","tick","oldTimers","clearInterval","numberString","padded","ms","seconds","Math","floor","minutes","hours","toString","join","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3b09d654.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faTrashAlt, faPlusSquare } from '@fortawesome/free-solid-svg-icons';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport './App.css';\n\nclass App extends Component {\n\n  constructor() {\n    super()\n    this.timerID = undefined\n    this.change1 = this.change1.bind(this)\n    this.change2 = this.change2.bind(this)\n    this.cancelSubmit = this.cancelSubmit.bind(this)\n    this.update = this.update.bind(this)\n    this.updateOk = this.updateOk.bind(this)\n    this.updateCancel = this.updateCancel.bind(this)\n    this.delete = this.delete.bind(this)\n    this.new = this.new.bind(this)\n    this.newCancel = this.newCancel.bind(this)\n    this.newOk = this.newOk.bind(this)\n    this.addTime = this.addTime.bind(this)\n    this.stop = this.stop.bind(this)\n    this.pad = this.pad.bind(this)\n    this.millisecondsToHuman = this.millisecondsToHuman.bind(this)\n    this.state = {\n      timers: [{id:1, run:false, title:\"Estudiando Ruby\", project:\"Ruby\",cronom: this.timerID, elapsedTime:\"00:00:00\", time:0, timerVisibility:true},{id:2, run:false, title:\"Estudiando Javascript\", project:\"Javascript\",cronom: this.timerID, elapsedTime:\"00:00:00\", time:0, timerVisibility:true}],\n      new: false,\n      title: \"\",\n      project: \"\",\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div>\n          <h1 className=\"text-center\">Timers</h1>\n          <hr />\n        </div>\n        <div>\n\n          {this.state.timers.map((timer,index) =>\n            <div>\n              <div className={timer.timerVisibility === true ? \"card\": \"card d-none\"}>\n                <div className=\"card-body\">\n                  <h5>{timer.title}</h5>\n                  <div className=\"text-secondary small\">{timer.project}</div>\n                  <br />\n                  <h3 className=\"text-center\">{timer.elapsedTime}</h3>\n                  <div className=\"d-flex flex-row-reverse justify-content-between\">\n                    <FontAwesomeIcon onClick={() => this.delete(timer.id)} icon={faTrashAlt} size=\"xs\" />\n                    <FontAwesomeIcon onClick={() => this.update(timer.id)} icon={faEdit} size=\"xs\" />\n                  </div>\n                </div>\n                <div>\n                  <button type=\"button\" onClick={() => this.addTime(timer.id)} className = {timer.run === false ? \"btn btn-outline-success btn-block\" : \"d-none\"}>Start</button>\n                  <button type=\"button\" onClick={() => this.stop(timer.id)} className = {timer.run === false ? \"d-none\" : \"btn btn-outline-danger btn-block\"}>Stop</button> \n                </div>   \n              </div>\n\n              <div className={timer.timerVisibility === true ? \"card d-none\": \"card\"}>\n                <div className=\"card-body\">\n                  <form>\n                    <div className=\"form-group\">\n                      <label for=\"title\">Title:</label>\n                      <input type=\"text\" defaultValue={timer.title} onChange={this.change1} className=\"form-control\" id=\"title\" />\n                    </div>\n                    <div className=\"form-group\">\n                      <label for=\"project\">Project:</label>\n                      <input type=\"text\" defaultValue={timer.project} onChange={this.change2} className=\"form-control\" id=\"project\" />\n                    </div>\n                  </form>\n                </div>\n                <div className=\"btn-group\">\n                  <button type=\"button\" onClick={() => this.updateOk(timer.id)} className=\"btn btn-outline-info\">Update</button>\n                  <button type=\"button\" onClick={() => this.updateCancel(timer.id)} className=\"btn btn-outline-danger\">Cancel</button>\n                </div>\n              </div>\n            </div>\n          )}\n\n          <div className={this.state.new === true ? \"card\": \"card d-none\"}>\n            <div className=\"card-body\">\n              <form onSubmit={this.cancelSubmit}>\n                <div className=\"form-group\">\n                  <label for=\"title\">Title:</label>\n                  <input type=\"text\" value={this.state.title} onChange={this.change1} className=\"form-control\" id=\"title\" />\n                </div>\n                <div className=\"form-group\">\n                  <label for=\"project\">Project:</label>\n                  <input type=\"text\" value={this.state.project} onChange={this.change2} className=\"form-control\" id=\"project\" />\n                </div>\n              </form>\n            </div>\n            <div className=\"btn-group\">\n              <button type=\"button\" onClick={this.newOk} className=\"btn btn-outline-info\">Create</button>\n              <button type=\"button\" onClick={this.newCancel} className=\"btn btn-outline-danger\">Cancel</button>\n            </div>\n          </div>\n\n          <div className={this.state.new === true ? \"text-center d-none\": \"text-center\"}>\n            <FontAwesomeIcon onClick={this.new} icon={faPlusSquare} size=\"2x\" />\n          </div>\n          <br />\n\n        </div>\n      </div>\n    );\n  }\n\n  change1(event){\n    this.setState({\n      title: event.target.value\n    })\n  }\n\n  change2(event){\n    this.setState({\n      project: event.target.value\n    })\n  }\n\n  cancelSubmit(event){\n    event.preventDefault();\n  }\n\n  update(timerId){\n    var timers=[];\n    for (var i = 0; i< this.state.timers.length; i++) {\n      if(this.state.timers[i].id === timerId){\n        this.state.timers[i].timerVisibility = false;\n        timers.push(this.state.timers[i]);\n      }\n      else{\n        timers.push(this.state.timers[i]);\n      }\n    }\n    this.setState({\n      timers: timers\n    });\n  }\n\n  updateCancel(timerId){\n    var timers=[];\n    for (var i = 0; i< this.state.timers.length; i++) {\n      if(this.state.timers[i].id === timerId){\n        this.state.timers[i].timerVisibility = true;\n        timers.push(this.state.timers[i]);\n      }\n      else{\n        timers.push(this.state.timers[i]);\n      }\n    }\n    this.setState({\n      timers: timers\n    });\n  }\n\n  updateOk(timerId){\n    var timers=[];\n    for (var i = 0; i< this.state.timers.length; i++) {\n      if(this.state.timers[i].id === timerId){\n        if(this.state.title===\"\"){\n        }\n        else{\n          this.state.timers[i].title = this.state.title;\n        }\n        if(this.state.project===\"\"){\n        }\n        else{\n          this.state.timers[i].project = this.state.project;\n        }\n        this.state.timers[i].timerVisibility = true;\n        timers.push(this.state.timers[i]);\n      }\n      else{\n        timers.push(this.state.timers[i]);\n      }\n    }\n    this.setState({\n      timers: timers\n    });\n  }\n\n  delete(timerId){\n    const timer = this.state.timers;\n    const index = parseInt(timerId);\n    this.setState({\n      timers: timer.filter((i) =>\n        index !== i.id\n      )\n    });\n  }\n\n  new(){\n    this.setState({\n      new: true\n    });\n  }\n\n  newCancel(){\n    this.setState({\n      new: false\n    });\n  }\n\n  newOk(){\n\n    var newTitle=\"\";\n    var newProject=\"\";\n\n    if(this.state.title === \"\"){\n      newTitle = \"Timer\";\n    }\n    else{\n      newTitle = this.state.title;\n    }\n    if(this.state.project === \"\"){\n      newProject = \"Project\";\n    }\n    else{\n      newProject = this.state.project;\n    }\n\n    var timers=this.state.timers;\n    timers.push({id:this.state.timers.length+1, run:false, title: newTitle, project: newProject , elapsedTime:\"00:00:00\", time: 0, timerVisibility:true})\n\n    this.setState({\n      timers: timers, \n      new: false,\n      title: \"\",\n      project: \"\"\n    });\n  }\n\n  addTime(timerId) {\n    var timers=[];\n    for (var i = 0; i< this.state.timers.length; i++) {\n      if(this.state.timers[i].id === timerId){\n        this.state.timers[i].run = true;\n        this.state.timers[i].cronom = setInterval(() => this.tick(timerId),1000);\n        timers.push(this.state.timers[i]);\n      }\n      else{\n        timers.push(this.state.timers[i]);\n      }\n    }\n    this.setState({\n      timers: timers\n    });\n  }\n\n  tick(timerId) {\n    var oldTimers=this.state.timers;\n    for (var i = 0; i< oldTimers.length; i++) {\n      if(oldTimers[i].id === timerId){\n        oldTimers[i].time+=1000;\n        oldTimers[i].elapsedTime = this.millisecondsToHuman(oldTimers[i].time); \n      }\n    }  \n    this.setState({\n      timer: oldTimers\n    });\n  }\n\n  stop(timerId) {\n    var timers=[];\n    for (var i = 0; i< this.state.timers.length; i++) {\n      if(this.state.timers[i].id === timerId){\n        this.state.timers[i].run = false;\n        clearInterval(this.state.timers[i].cronom);       \n        timers.push(this.state.timers[i]);\n      }\n      else{\n        timers.push(this.state.timers[i]);\n      }\n    }\n    this.setState({\n      timers: timers\n    });\n  }\n\n  pad(numberString, size) {\n    let padded = numberString;\n    while (padded.length < size) padded = `0${padded}`;\n    return padded;\n  }\n\n  millisecondsToHuman(ms) {\n    const seconds = Math.floor((ms / 1000) % 60);\n    const minutes = Math.floor((ms / 1000 / 60) % 60);\n    const hours = Math.floor(ms / 1000 / 60 / 60);\n\n    const humanized = [\n      this.pad(hours.toString(), 2),\n      this.pad(minutes.toString(), 2),\n      this.pad(seconds.toString(), 2),\n    ].join(':')\n    return humanized;\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}